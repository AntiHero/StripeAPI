// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  username     String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  accountType  AccountType   @default(PERSONAL)
  subscription Subscription?
  payments     Payment[]

  @@map("users")
}

enum AccountType {
  PERSONAL
  BUSINESS
}

enum SubscriptionStatus {
  ACTIVE
  CANCELLED
}

enum SubscriptionType {
  MONTH
  SIXMONTHS
  YEAR
}

model Subscription {
  id         String             @id @default(uuid())
  userId     String             @unique
  user       User               @relation(references: [id], fields: [userId], onDelete: Cascade)
  status     SubscriptionStatus @default(ACTIVE)
  type       SubscriptionType
  priceId    String
  price      SubscriptionPrice  @relation(fields: [priceId], references: [id])
  activeTill DateTime
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt

  @@index([userId])
  @@map("subscriptions")
}

enum Currency {
  USD
  BYN
  EUR
}

enum PaymentStatus {
  PENDING
  CONFIRMED
  REJECTED
}

model Payment {
  id          String            @id @default(uuid())
  description String?
  price       SubscriptionPrice @relation(fields: [priceId], references: [id])
  priceId     String
  status      PaymentStatus
  user        User              @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  @@map("payments")
}

enum PaymentType {
  ONETIME
  RECCURING
}

model SubscriptionPrice {
  id           String           @id @default(uuid())
  type         PaymentType
  priceId      String           @unique
  productId    String
  currency     Currency
  price        Float
  name         SubscriptionType
  period       Int
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  payments     Payment[]
  subscription Subscription[]

  @@index([priceId])
  @@map("prices")
}
