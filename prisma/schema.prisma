// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  username     String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  accountType  AccountType   @default(PERSONAL)
  subscription Subscription?
  payments     Payment[]

  @@map("users")
}

enum AccountType {
  PERSONAL
  BUSINESS
}

enum SubscriptionStatus {
  ACTIVE
  PAUSED
  CANCELLED
}

model Subscription {
  id             String             @id @default(uuid())
  userId         String             @unique
  user           User               @relation(references: [id], fields: [userId], onDelete: Cascade)
  status         SubscriptionStatus @default(ACTIVE)
  subscription   String?            @unique
  planId         String
  plan           PricingPlan        @relation(fields: [planId], references: [id])
  expirationDate DateTime
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt

  @@index([userId])
  @@map("subscriptions")
}

enum Currency {
  USD
}

enum PaymentStatus {
  PENDING
  CONFIRMED
  REJECTED
}

model Payment {
  id             String        @id @default(uuid())
  description    String?
  status         PaymentStatus
  subscription   String?       @unique
  expirationDate DateTime?
  user           User          @relation(fields: [userId], references: [id])
  userId         String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  plan           PricingPlan   @relation(fields: [planId], references: [id])
  planId         String

  @@map("payments")
}

model Price {
  id            String        @id @default(uuid())
  currency      Currency      @default(USD)
  value         Float
  period        Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  providerPrice PricingPlan[]

  @@map("prices")
}

model PricingPlan {
  id           String          @id @default(uuid())
  entityId     String
  priceId      String
  price        Price           @relation(fields: [priceId], references: [id], onDelete: Cascade)
  paymentType  PaymentType
  provider     PaymentProvider
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  payments     Payment[]
  subscription Subscription[]
}

enum PaymentType {
  ONETIME
  RECCURING
}

enum PaymentProvider {
  STRIPE
  PAYPAL
}
